<Application x:Class="IdleTrainerBot.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:IdleTrainerBot"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="RoundButton" TargetType="Button">
            <Setter Property="Background" Value="DodgerBlue" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="20" Background="{TemplateBinding Background}">
                            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentControl>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <SolidColorBrush x:Key="BackgroundBrush" Color="#333333"/>
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#111111"/>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#AAAAAA"/>
        <SolidColorBrush x:Key="ShadeBackgroundBrush" Color="#555555"/>

        <SolidColorBrush x:Key="ForegroundBrush" Color="#333333"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#808080"/>
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#333333"/>
        <SolidColorBrush x:Key="ShadeForegroundBrush" Color="#FFFFFF"/>

        <SolidColorBrush x:Key="BorderBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ItemBorderBrush" Color="#DDDDDD"/>

        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="2,2,2,0" />
            <Setter Property="BorderBrush" Value="#333333"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="4" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="4" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}"/>
                            <!-- ContentPresenter for the header -->
                            <Border x:Name="Header" Padding="6,0,6,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                            </Border>
                            <!-- Primary content for GroupBox -->
                            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}"/>
                            <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.OpacityMask>
                                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                        <Binding ElementName="Header" Path="ActualWidth"/>
                                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight"/>
                                    </MultiBinding>
                                </Border.OpacityMask>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />-->
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabTest" TargetType="TabItem">
            <Setter Property="BorderThickness" Value="0 2 0 0"/>
            <Setter Property="BorderBrush" Value="#FF81828B"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Border Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"/>
                                </Grid>

                                <Border BorderThickness="{TemplateBinding BorderThickness}" 
                Padding="{TemplateBinding Padding}">
                                    <ContentPresenter ContentSource="Header" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <!--We want the selected TabItem to always be on top.-->
                                <Setter Property="BorderBrush" Value="#FF16B7F3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
